rootsh Installation Instructions:

coming soon: http://people.consol.de/~lausser/rootsh
lausser@users.sourceforge.net


Step 1. Decide if you want to have your logfiles in a non-standard place.

        Logfiles with names like <user>.<date><time>.<process id>
        will be written here, one for each rootsh session.
        The users' input and output will be copied into these files.
        I recommend to go with the default settings. This will be
        /var/log/rootsh, /var/adm/rootsh, ...
        according to your operating system.


Step 2. Decide if you want to disable syslog.

        By default all of the logged input and output will be 
        sent to the syslog daemon. If you don't trust your 
        rootsh users you can have syslogd to send your logging data
        to another host, where they can not be manipulated.
        In any case the logged input and output will be written
        into logfiles.


Step 3. Decide if you want to change syslog priority.
  
        By default all syslog messages use level "local5" and
        facility "notice". If you don't like this, you can use
        whatever you want. 
        Be sure you edit your /etc/syslog.conf and make an entry
        for your priority, either "local5.notice" or your own.


Step 4. Decide if you want to turn off syslog line numbering

	By default every syslog line is prepended by a 3-digit counter
	and a colon. If you are in doubt wether messages were lost on
	their way to the syslog server, you can examine the counter's
	column. The numbers should be ascending from 000 to 100 and
	then again start at 000.


Step 5. Configure your installation

	There are 5 options to configure rootsh.

	--disable-logfile

	Using this option will turn off logging to a local logfile.
	If you disable logfiles, you _must not_ also disable syslog.
	By default logfiles are turned on.
	If you plan to use rootsh as command line interpreter with logging 
	for some users (7th field in /etc/passwd), you must disable logfiles.
	This is because rootsh will be run with user privileges.

        --with-logdir=LOGDIR
        
        Using this option will change the default directory for your
        logfiles. 

        --disable-syslog

        Using this option will turn off logging to syslog. You still
        have logfiles, but they could be manipulated by rootsh users.
	By default syslog is turned on.

        --enable-syslog=LEVEL.FACILITY

        Using this option will allow you to change the default
        priority "local5.notice":

	--disable-linenumbering

	Using this option will turn off prepending the syslog lines 
	with a line counter.

	By calling the binary with the "-V" or "--version" option
	you can later see how these options were used.
	

Step 6. Build the binaries.

	This is the easy part, type "make".
	It worked for me on Linux 2.4, SunOS5.9, HP-UX11.11, AIX 5 and
	FreeBSD 5.2.1

	
Step 7. Install the components.

	Type "make install".
	
	This will install your rootsh binary.  


Step 8. Grant a user the right to use rootsh

        Make an entry in your /etc/sudoers and give the user the right
        to execute the rootsh binary.
        By typing "sudo rootsh" he will get a root shell and you can
        watch his steps or read later what he has done.
	

Some remarks:

	I had two warnings on AIX with gcc-2.95 
        /usr/include/time.h:236: warning: `struct sigevent' declared 
	   inside parameter list
	rootsh.c:258: warning: implicit declaration of function `snprintf'
	which disappeared when i used the native compiler. 
	Maybe a newer gcc also helps. (-std=c99 produced even more warnings)



